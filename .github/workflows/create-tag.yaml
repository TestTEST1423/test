name: Create tag on PR Merge
permissions: write-all

on:
  workflow_call:
#  workflow_dispatch:

jobs:
  fetch-labels-and-create-tag:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #Fetch all history and tags

       # Get the latest tag from the repository
      - name: Get latest tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")  # Get latest tag or default to v0.0.0
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "Current latest tag is $LATEST_TAG"

      # Determine the next version based on PR labels
      - name: Calculate next version
        run: |
          # Initizalise skip release
          echo "SKIP_RELEASE=true" >> $GITHUB_ENV
          
          # Extract major, minor, patch from the latest tag (strip leading 'v')
          VERSION=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          
          MAJOR=$((MAJOR + 1))
          MINOR=0
          PATCH=0

          # Construct the new version
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Calculated new version: $NEW_VERSION"

      - name: Cancel Workflow
        if: env.SKIP_RELEASE != 'true'
        run: exit 78
      
      # Create a new Git tag with the calculated version
      - name: Create Git Tag
        if: env.SKIP_RELEASE != 'true'
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN_WORKFLOW_USER }}
        run: |
          echo $PAT_TOKEN
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git tag $NEW_VERSION
          git push https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git $NEW_VERSION
